#!/bin/bash
#
# Init file for TigerVNC Server
#
# chkconfig: - 91 35
# description: Starts and stops vncserver. \
#	       used to provide remote X administration services.
#
# processname: Xvnc

### BEGIN INIT INFO
# Provides: vncserver
# Required-Start: $network $named
# Required-Stop: $network $named
# Default-Start:
# Default-Stop: 0 1 2 3 4 5 6
# Short-Description: start|stop|restart|try-restart|status|force-reload vncserver
# Description: control vncserver which exports your desktop
### END INIT INFO

# Source function library.
. /etc/init.d/functions || true
. /lib/lsb/init-functions
type log_begin_msg > /dev/null 2>&1 || log_begin_msg () { echo -n $@ }

[ -r /etc/sysconfig/vncservers ] && . /etc/sysconfig/vncservers
[ -r /etc/default/vncservers ] && . /etc/default/vncservers

prog=$"VNC server"

RETVAL=0

if type runuser > /dev/null 2>&1 ; then
    RUNUSER="runuser"
else
    RUNUSER="su"
fi

start() {
    [ "$EUID" != "0" ] && exit 4
    
    # Check that networking is up.
    if [ -e /etc/sysconfig/network ]; then
        . /etc/sysconfig/network
        [ ${NETWORKING} = "no" ] && exit 1
    fi

    [ -x /usr/bin/vncserver ] || exit 5
    [ -x /usr/bin/Xvnc ] || exit 5

    log_begin_msg "Starting $prog: "
    RETVAL=0
    if [ ! -d /tmp/.X11-unix ]
    then
        mkdir -m 1777 /tmp/.X11-unix || :
        restorecon /tmp/.X11-unix 2>/dev/null || :
    fi

    for display in ${VNCSERVERS}
    do
      SERVS=1
      echo -n "${display} "
      DISP="${display%%:*}"
      USER="${display##*:}"
      VNCUSERARGS="${VNCSERVERARGS[${DISP}]}"
      if [ -r $(eval echo ~${USER})/.vnc/passwd ]; then
         ${RUNUSER} -l ${USER} -c \
            "cd ~${USER} && vncserver :${DISP} ${VNCUSERARGS}"
         RETVAL=$?
      else
        log_failure_msg VNC password for user ${USER} is not configured
        RETVAL=1
      fi
      [ "$RETVAL" -eq 0 ] || break
    done
    if [ -z "$SERVS" ]; then
        log_failure_msg "no displays configured "
        RETVAL=6
    else
        if [ "$RETVAL" -eq 0 ]; then
            log_success_msg
    	    [ -d /var/lock/subsys ] && touch /var/lock/subsys/Xvnc
        else 
            log_failure_msg
        fi
    fi
    echo

# As written in https://bugzilla.redhat.com/show_bug.cgi?id=523974 (LSB
# compliance) start of already running service is OK.
    [ "$RETVAL" -eq 98 ] && RETVAL=0

    return "$RETVAL"
}

stop() {
    [ "$EUID" != "0" ] && exit 4

    log_begin_msg "Shutting down $prog: "

	for display in ${VNCSERVERS}; do
	    echo -n "${display} "
	    export USER="${display##*:}"
	    ${RUNUSER} ${USER} -c "vncserver -kill :${display%%:*}" >/dev/null 2>&1
	done
	RETVAL=$?

    [ "$RETVAL" -eq 0 ] && log_success_msg || log_failure_msg
    echo
    [ "$RETVAL" -eq 0 ] && rm -f /var/lock/subsys/Xvnc
    return "$RETVAL"
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart|force-reload)
	stop
	sleep 3
	start
	;;
  condrestart|try-restart)
    if [ -e /var/lock/subsys/Xvnc ]; then
        stop
        sleep 3
        start
    fi
    ;;
  status)
	status Xvnc
	RETVAL=$?
	;;
  reload)
	exit 3
	;;
  *)
	echo $"Usage: $0 {start|stop|restart|try-restart|status|force-reload}"
	exit 2
esac

exit "$RETVAL"

